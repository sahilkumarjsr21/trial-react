[{"/Users/sk078475/WebstormProjects/quiz-app/src/components/loginComponent.jsx":"1","/Users/sk078475/WebstormProjects/quiz-app/src/App.js":"2","/Users/sk078475/WebstormProjects/quiz-app/src/index.js":"3","/Users/sk078475/WebstormProjects/quiz-app/src/components/dashboardComponent.jsx":"4","/Users/sk078475/WebstormProjects/quiz-app/src/redux/actions/ActionTypes.js":"5","/Users/sk078475/WebstormProjects/quiz-app/src/components/createQuestionComponent.jsx":"6","/Users/sk078475/WebstormProjects/quiz-app/src/components/displayQuestionComponent.jsx":"7","/Users/sk078475/WebstormProjects/quiz-app/src/redux/store/configureStore.js":"8","/Users/sk078475/WebstormProjects/quiz-app/src/redux/reducer/rootReducers.js":"9","/Users/sk078475/WebstormProjects/quiz-app/src/redux/reducer/createQuestionReducer.js":"10","/Users/sk078475/WebstormProjects/quiz-app/src/api/signupapi.js":"11","/Users/sk078475/WebstormProjects/quiz-app/src/redux/actions/UserActionLogin.js":"12","/Users/sk078475/WebstormProjects/quiz-app/src/api/addQuestionDetailsApi.js":"13","/Users/sk078475/WebstormProjects/quiz-app/src/redux/actions/deleteQuestionAction.js":"14","/Users/sk078475/WebstormProjects/quiz-app/src/redux/sagas/storeQuestionSaga.js":"15","/Users/sk078475/WebstormProjects/quiz-app/src/redux/sagas/fetchQuestionDetailsSaga.js":"16","/Users/sk078475/WebstormProjects/quiz-app/src/redux/sagas/updateQuestionDetailSaga.js":"17","/Users/sk078475/WebstormProjects/quiz-app/src/redux/sagas/deleteQuestionDetailsSaga.js":"18","/Users/sk078475/WebstormProjects/quiz-app/src/redux/sagas/signUpSaga.js":"19","/Users/sk078475/WebstormProjects/quiz-app/src/redux/sagas/loginSaga.js":"20","/Users/sk078475/WebstormProjects/quiz-app/src/redux/reducer/deleteQuestionReducer.js":"21"},{"size":7148,"mtime":1608060668306,"results":"22","hashOfConfig":"23"},{"size":197,"mtime":1608062222092,"results":"24","hashOfConfig":"23"},{"size":578,"mtime":1608065409091,"results":"25","hashOfConfig":"23"},{"size":2501,"mtime":1608065202086,"results":"26","hashOfConfig":"23"},{"size":1720,"mtime":1608063756285,"results":"27","hashOfConfig":"23"},{"size":26955,"mtime":1608154940092,"results":"28","hashOfConfig":"23"},{"size":7502,"mtime":1608072714385,"results":"29","hashOfConfig":"23"},{"size":1487,"mtime":1608067389511,"results":"30","hashOfConfig":"23"},{"size":557,"mtime":1608067983241,"results":"31","hashOfConfig":"23"},{"size":457,"mtime":1608065162726,"results":"32","hashOfConfig":"23"},{"size":384,"mtime":1608067143241,"results":"33","hashOfConfig":"23"},{"size":464,"mtime":1608061908613,"results":"34","hashOfConfig":"23"},{"size":342,"mtime":1608067221336,"results":"35","hashOfConfig":"23"},{"size":494,"mtime":1608066575106,"results":"36","hashOfConfig":"23"},{"size":949,"mtime":1608154916548,"results":"37","hashOfConfig":"23"},{"size":645,"mtime":1608067466327,"results":"38","hashOfConfig":"23"},{"size":753,"mtime":1608067486631,"results":"39","hashOfConfig":"23"},{"size":769,"mtime":1608067696182,"results":"40","hashOfConfig":"23"},{"size":775,"mtime":1608067599953,"results":"41","hashOfConfig":"23"},{"size":779,"mtime":1608067612158,"results":"42","hashOfConfig":"23"},{"size":573,"mtime":1608066284301,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"10jaqpm",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sk078475/WebstormProjects/quiz-app/src/components/loginComponent.jsx",["90","91","92","93","94"],"import React, { useState } from \"react\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport * as ActionTypes from '../redux/actions/ActionTypes'\nimport {\n    makeStyles,\n    CssBaseline,\n    Container,\n    Typography,\n    TextField,\n    Button,\n    InputAdornment,\n    Avatar,\n} from \"@material-ui/core\";\nimport { RemoveRedEye, EnhancedEncryptionRounded } from \"@material-ui/icons\";\nimport SnackbarComponent from \"./SnackBar\";\nconst useStyles = makeStyles((theme) => ({\n    paperRoot: {\n        marginTop: theme.spacing(1),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    icon: {\n        margin: theme.spacing(1),\n        backgroundColor: \"#1de9b6\",\n    },\n    form: {\n        width: \"100%\",\n        marginTop: theme.spacing(1),\n    },\n    submitBtn: {\n        margin: theme.spacing(2, 0, 2),\n        backgroundColor: \"#0277bd\",\n    },\n    eye: {\n        cursor: \"pointer\",\n    },\n}));\n\nexport default function LoginComponent() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const emailRegex = RegExp(\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n    const passwordRegex = RegExp(\n        \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[*.!@$%^&(){}[]:;<>,.?/~_+-=|]).{8,32}$\"\n    );\n\n    const [passwordType, setPasswordType] = useState(\"password\");\n    const [formErrors, setFormErrors] = useState({\n        emailError: false,\n        passwordError: false,\n        emailErrorMessage: \"\",\n        passwordErrorMessage: \"\",\n    });\n    const [formData, setFormData] = useState({ email: \"\", password: \"\" });\n\n\n    const togglePasswordMask = () => {\n        setPasswordType((prevstate) =>\n            prevstate === \"text\" ? \"password\" : \"text\"\n        );\n    };\n\n    const formValid = (formData, formErrors) => {\n        var valid = true;\n        if (formData.email === \"\" ) {\n            setEmailErrorType(`Can't be Empty`)\n            valid=false\n        }\n        if(formData.password === \"\"){\n            setPasswordErrorType(`Can't Be Empty`)\n            valid =false\n        }\n        else if (\n            formErrors.emailError !== false ||\n            formErrors.passwordError !== false\n        ) {\n            valid=false\n        }\n        return valid;\n    };\n\n    const handleOnSubmit = (e) => {\n        e.preventDefault();\n        if (formValid(formData, formErrors)) {\n            dispatch({type: ActionTypes.LOGIN_USER_PROGRESS , payload: formData });\n        }\n    };\n\n    const setEmailErrorType = (message) => {\n        setFormErrors((prevstate)=>({\n            ...prevstate,\n            emailError: true,\n            emailErrorMessage: message,\n        }));\n    };\n\n    const setPasswordErrorType = (message) => {\n        setFormErrors((prevstate)=>({\n            ...prevstate,\n            passwordError: true,\n            passwordErrorMessage: message,\n        }));\n    };\n    const handleOnChange = (e) => {\n        e.preventDefault();\n        const { name, value } = e.target;\n\n        switch (name) {\n            case \"email\":\n                setFormData({ ...formData, email: value });\n                if (value === \"\") {\n                    setEmailErrorType(\"Email is Empty\");\n                } else if (!emailRegex.test(value) === true) {\n                    setEmailErrorType(\"Invalid Email\");\n                } else {\n                    setFormErrors({\n                        ...formErrors,\n                        emailError: false,\n                        emailErrorMessage: \"\",\n                    });\n                }\n                break;\n            case \"password\":\n                setFormData({ ...formData, password: value });\n                if (value === \"\") {\n                    setPasswordErrorType(\"Password is Empty\");\n                } else {\n                    setFormErrors({\n                        ...formErrors,\n                        passwordError: false,\n                        passwordErrorMessage: \"\",\n                    });\n                }\n                break;\n            default:\n                break;\n        }\n    };\n    const selector = useSelector((state)=>state.loginReducer.token)\n    return (\n        <React.Fragment>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={classes.paperRoot}>\n                    <Avatar className={classes.icon}>\n                        <EnhancedEncryptionRounded />\n                    </Avatar>\n                    <Typography variant=\"h5\"> Sign In</Typography>\n                    <form className={classes.form} noValidate onSubmit={handleOnSubmit}>\n                        <TextField\n                            variant=\"outlined\"\n                            fullWidth\n                            margin=\"normal\"\n                            required={true}\n                            name=\"email\"\n                            label=\"Email Address\"\n                            type=\"email\"\n                            id=\"email\"\n                            error={formErrors.emailError}\n                            onChange={handleOnChange}\n                            helperText={formErrors.emailErrorMessage}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            fullWidth\n                            margin=\"normal\"\n                            error={formErrors.passwordError}\n                            required={true}\n                            helperText={formErrors.passwordErrorMessage}\n                            name=\"password\"\n                            label=\"Password\"\n                            type={passwordType}\n                            id=\"password\"\n                            onChange={handleOnChange}\n                            autoComplete=\"current-password\"\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <RemoveRedEye\n                                            className={classes.eye}\n                                            onClick={togglePasswordMask}\n                                        />\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submitBtn}\n                            fullWidth={true}\n                            size=\"large\"\n                            onClick={handleOnSubmit}\n                        >\n                            sign in\n                        </Button>\n                    </form>\n                </div>\n            </Container>\n            {selector ==='fail'?<SnackbarComponent open ={true} severity = 'error' text = \"Invalid credentials\"/>:null}\n        </React.Fragment>\n    );\n}\n","/Users/sk078475/WebstormProjects/quiz-app/src/App.js",[],["95","96"],"/Users/sk078475/WebstormProjects/quiz-app/src/index.js",["97"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/sk078475/WebstormProjects/quiz-app/src/components/dashboardComponent.jsx",["98"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Appbar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Button, SvgIcon, colors } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n// import AppDrawer from \"./appdrawer\";\nimport * as ActionTypes from '../redux/actions/ActionTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CreateQuestion from \"./createQuestionComponent\";\nimport DisplayQuestion from \"./displayQuestionComponent\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n    },\n    title: {\n        flexGrow: 1,\n    },\n    logo: {\n        marginRight: theme.spacing(3),\n    },\n    appbar: {\n        zIndex: theme.zIndex.drawer + 1,\n        backgroundColor: \"#0277bd\",\n    },\n    toolbar: theme.mixins.toolbar,\n    buttons: {\n        marginRight: theme.spacing(2),\n    },\n    content: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.default,\n    },\n}));\n\nexport default function AppbarComponent() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const selector = useSelector(state => state.createQuestionReducer.value);\n    const createQuestionHandler = () => {\n        dispatch({ type: ActionTypes.SET_CREATE_QUESTION_TRUE, payload: true })\n    };\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n                <Appbar position=\"fixed\" className={classes.appbar}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            DashBoard\n            </Typography>\n                        <Button\n                            className={classes.buttons}\n                            variant=\"outlined\"\n                            style={{ background: colors.blue[100] }}\n                            onClick={createQuestionHandler}\n                        >\n                            Create Question\n            </Button>\n                    </Toolbar>\n                </Appbar>\n                {/* <AppDrawer className = {classes.toolbar} /> */}\n                <main className={classes.content}>\n                    <div className={classes.toolbar}>\n                        {selector ? <CreateQuestion questionDetails={null} /> : <DisplayQuestion ></DisplayQuestion>}\n                    </div>\n                </main>\n            </div>\n        </React.Fragment>\n    );\n}\n","/Users/sk078475/WebstormProjects/quiz-app/src/redux/actions/ActionTypes.js",[],"/Users/sk078475/WebstormProjects/quiz-app/src/components/createQuestionComponent.jsx",[],"/Users/sk078475/WebstormProjects/quiz-app/src/components/displayQuestionComponent.jsx",["99"],"/Users/sk078475/WebstormProjects/quiz-app/src/redux/store/configureStore.js",[],"/Users/sk078475/WebstormProjects/quiz-app/src/redux/reducer/rootReducers.js",[],"/Users/sk078475/WebstormProjects/quiz-app/src/redux/reducer/createQuestionReducer.js",[],"/Users/sk078475/WebstormProjects/quiz-app/src/api/signupapi.js",[],"/Users/sk078475/WebstormProjects/quiz-app/src/redux/actions/UserActionLogin.js",[],"/Users/sk078475/WebstormProjects/quiz-app/src/api/addQuestionDetailsApi.js",[],"/Users/sk078475/WebstormProjects/quiz-app/src/redux/actions/deleteQuestionAction.js",[],"/Users/sk078475/WebstormProjects/quiz-app/src/redux/sagas/storeQuestionSaga.js",[],"/Users/sk078475/WebstormProjects/quiz-app/src/redux/sagas/fetchQuestionDetailsSaga.js",[],"/Users/sk078475/WebstormProjects/quiz-app/src/redux/sagas/updateQuestionDetailSaga.js",[],"/Users/sk078475/WebstormProjects/quiz-app/src/redux/sagas/deleteQuestionDetailsSaga.js",[],"/Users/sk078475/WebstormProjects/quiz-app/src/redux/sagas/signUpSaga.js",[],"/Users/sk078475/WebstormProjects/quiz-app/src/redux/sagas/loginSaga.js",[],"/Users/sk078475/WebstormProjects/quiz-app/src/redux/reducer/deleteQuestionReducer.js",[],{"ruleId":"100","severity":1,"message":"101","line":44,"column":31,"nodeType":"102","messageId":"103","endLine":44,"endColumn":32,"suggestions":"104"},{"ruleId":"100","severity":1,"message":"101","line":44,"column":56,"nodeType":"102","messageId":"103","endLine":44,"endColumn":57,"suggestions":"105"},{"ruleId":"100","severity":1,"message":"101","line":44,"column":65,"nodeType":"102","messageId":"103","endLine":44,"endColumn":66,"suggestions":"106"},{"ruleId":"100","severity":1,"message":"101","line":44,"column":69,"nodeType":"102","messageId":"103","endLine":44,"endColumn":70,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":46,"column":11,"nodeType":"110","messageId":"111","endLine":46,"endColumn":24},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":2,"message":"117","line":8,"column":20,"nodeType":"110","messageId":"118","endLine":8,"endColumn":25},{"ruleId":"108","severity":1,"message":"119","line":5,"column":18,"nodeType":"110","messageId":"111","endLine":5,"endColumn":25},{"ruleId":"120","severity":1,"message":"121","line":179,"column":5,"nodeType":"122","endLine":179,"endColumn":7,"suggestions":"123"},"no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["124","125"],["126","127"],["128","129"],["130","131"],"no-unused-vars","'passwordRegex' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-undef","'store' is not defined.","undef","'SvgIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["134"],{"messageId":"135","fix":"136","desc":"137"},{"messageId":"138","fix":"139","desc":"140"},{"messageId":"135","fix":"141","desc":"137"},{"messageId":"138","fix":"142","desc":"140"},{"messageId":"135","fix":"143","desc":"137"},{"messageId":"138","fix":"144","desc":"140"},{"messageId":"135","fix":"145","desc":"137"},{"messageId":"138","fix":"146","desc":"140"},"no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},"removeEscape",{"range":"149","text":"150"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"151","text":"152"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"153","text":"150"},{"range":"154","text":"152"},{"range":"155","text":"150"},{"range":"156","text":"152"},{"range":"157","text":"150"},{"range":"158","text":"152"},"Update the dependencies array to be: [dispatch]",{"range":"159","text":"160"},[1121,1122],"",[1121,1121],"\\",[1146,1147],[1146,1146],[1155,1156],[1155,1155],[1159,1160],[1159,1159],[5500,5502],"[dispatch]"]